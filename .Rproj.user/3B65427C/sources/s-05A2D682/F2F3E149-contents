library(dplyr)
# reading the gbs data
getwd()
load(file = 'CIMMYT work/Rda/numeric_hapmap/gbs_data2.rda')
gbs_data <- gbs_data2
rm(gbs_data2)
gbs_data[1:10,1:6]
str(gbs_data[1:10])

snp_identifier <- gbs_data[,1]
gbs_data <- gbs_data[,-1:-4]
gbs_data[1:10,1:6]

# transforming the data.frame in matrix and giving row.names to it

matrix_for_cluster<-as.matrix(as.data.frame(sapply(gbs_data,as.integer)))
matrix_for_cluster[1:10,1:10]

# for pca we need as rows individuals , thus transpose the matrix
matrix_for_cluster <- t(matrix_for_cluster)
colnames(matrix_for_cluster) <- snp_identifier
matrix_for_cluster[1:10,1:10]
save(matrix_for_cluster,file = 'Rda/PCA/matrix_for_cluster.rda')

# transposing matrix because we need samples as rows and SNPs as columns as an input for prcomp

load(file = 'Rda/PCA/matrix_for_cluster.rda')
matrix_for_cluster <- as.data.frame(matrix_for_cluster)

tt <- read.csv(file = 'CIMMYT work/excel_text_files/',stringsAsFactors = F)
head(tt)

matrix_for_cluster<-matrix_for_cluster[rownames(matrix_for_cluster)%in%tt$GID,]

# $x contains the PC's here we use the first two columns 
# to draw a 2-D graph of the first two PC's

pca <- prcomp(matrix_for_cluster,scale. = T)
plot(pca$x[,1],pca$x[,2])

# calculate the percentage of variation that each PC's account for :
pca_var <- pca$sdev^2
pca_var_percent <- round(pca_var/sum(pca_var)*100,1) 
barplot(pca_var_percent,main = 'Scree Plot',xlab = 'Principal Components'
        ,ylab = 'Percent Variation',ylim = c(0,6))

# making a fancy ggplot graph of the pcas
require(dplyr)
library(ggplot2)
require(gtools)

tt <- read.csv(file='excel_text_files/csv/excel_not_duplicated.csv',stringsAsFactors = F)

str(excel_not_duplicated)

# counting number of individuals per trial just out of curiosity

ind_count <- excel_not_duplicated %>%
  group_by(trial) %>%
  summarise(number_of_ind = length(trial))

ind_count <- ind_count[mixedorder(ind_count$trial),]

ind_count %>% print(n=Inf)
sum(ind_count$number_of_ind)

write.csv(ind_count,file = "excel_text_files/csv/individual_count_per_trial.csv",row.names = F)


#########################

# organize the excel to be equal to the matrix 
excel_not_duplicated <- excel_not_duplicated[
                        match(rownames(matrix_for_cluster),excel_not_duplicated$GID)
                        ,]

row.names(matrix_for_cluster)[1:5]
tt$GID[1:5]
r$GID[1:5]
r[1:5,1:5]

tt <- tt[match(rownames(matrix_for_cluster),tt$GID),]

head(tt)
matrix_for_cluster[1:6,1:6]

rownames(tt) <- 1:nrow(tt)

#  trial transformations
require(dplyr)

tt <-
  tt %>%
  mutate(Group=trial) %>%
  select(trial,Group,everything())

head(tt)


tt$Group <- as.factor(gsub("ES[1-7]$",          "ES1-7",    tt$Group))
tt$Group <- as.factor(gsub("ES[8-9]$|ES1[0-3]$",  "ES8-13",   tt$Group))
tt$Group <- as.factor(gsub("ES1[4-9]$|ES2[0-5]$", "ES14-25",  tt$Group)) 
tt$Group <- as.factor(gsub("ES2[6-9]$|ES3[0-8]$", "ES26-38",  tt$Group))
tt$Group <- as.factor(gsub("SA[1-9]$|SA1[0-2]$",  "SA1-12",   tt$Group))
tt$Group <- as.factor(gsub("SA1[3-9]$|SA2[0-5]$", "SA14-25",  tt$Group))
###### or
tt[tt$Group=='ES1-7',]
head(tt)

tt$Group = factor(tt$Group,levels(tt$Group)[c(1,4,2,3,5,6)])
levels(tt$Group)

head(tt)
str (tt)


tt %>% group_by(Group) %>% summarise(count = n_distinct(GID))

write.csv(tt,'excel_text_files/csv/tt.csv')

# creating a pca dataframe as ggplot likes it
pca.data <- data.frame(Sample = tt$GID,
                       Group = tt$Group,
                       X = pca$x[,1],
                       Y = pca$x[,2],
                       Z = pca$x[,3]
                       )
head(pca.data)
str(pca.data)
pca.data$Sample <- as.character(pca.data$Sample)
rownames(pca.data) <- 1:nrow(pca.data)
head(pca.data)
str(pca.data)

save(pca.data,file = 'Rda/PCA/pca.data2.rda')
# 2D plot pca with ggplot


p1 <-    ggplot(data = pca.data, aes(x=X,y=Y))+
         geom_point(aes(color=Group),size=0.5,alpha=0.8) +
         guides(color = guide_legend(override.aes = list(size=2))) +
         labs(color = "Populations") +
         #geom_jitter(size=2,alpha=0.8) +
         scale_shape_discrete(solid = T) +
         scale_color_manual(values = c('firebrick2','blue','gray31','green3','chocolate3','magenta1')) +
         xlab(paste('PC1 - ',pca_var_percent[1],'%',sep = "")) +
         ylab(paste('PC2 - ',pca_var_percent[2],'%',sep = "")) +
         ggtitle("PCA")

p1 + theme_gray()

# how many individuals per level do I have ?
tt %>%
  group_by(Group) %>%
  summarise(no_rows = length(Group))

# to curly handling

write.csv(pca.data,file = 'excel_text_files/csv/pca_data_for_curly2.csv',row.names = F)